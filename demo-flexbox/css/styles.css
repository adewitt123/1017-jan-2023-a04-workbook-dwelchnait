body {
	background-color: white;
}

.container {
	margin:0 auto;
	width:960px;
	font-size: 100%;
	line-height: 1.5;
	text-align: center;
}

main{
	background-color: lightgray;
}

/****************************************************************

	Demo css styling using Flexbox

	default display of elements on your page is called "stacked"
	block element will follow each other on a new line in a stacked fashion

	to get your elements on the same line we can use various techniques such as
	   a) floats
	   b) flexbox   <---- we will be examining
	   c) CSS GRID

	to invoke flexbox the rule is
	   display: flex;
	   
	flexbox basic restrictions:

	a) affect ONLY the immediate level below where the flex is assigned
	b) by default all elements at the same level which are with the
	    immediate level below flex will have their size (content width)
		automatically adjust to be the same
	
	to keep the specified width of your content area for an element while
	   use flexbox; you will need to adjust the default flex-wrap (which is none)
	use the rule:
	    flex-wrap: wrap;

box model formula
  page width = 3(lm + lb + lp + cw + rp + rb + rm) + remainder
         960 = 3(30 + 2 + 0 + cw + 0 + 2 + 0) + 30
		 960 = 132 + 3 cw
		 960-132/3 =cw
		 828/3 =cw
		 276 = cw

	960 = lm + lb+ lp + cw + rp + rb + rm
	960 = 30 + 2 + 0 + cw + 0 + 2 + 30
	960 = 64 + cw
	960 - 64 = cw
	896 = cw
*****************************************************************/
main{
	display: flex;
	flex-wrap: wrap;
}



main div{
	height: 300px;
	width: 276px;
	margin: 10px 0 10px 30px;
	border: 2px solid black;

}

div{
	height: 100px;
}

footer{
	background-color: lightgray;
}
.red-paint{
	background-color: red;
}

.blue-paint{
	background-color: blue;
}

.black-paint{
	background-color: black;
	height: 100px;
	width:896px;
	border: 2px solid red;
}

.yellow-paint{
	background-color: yellow;
	
}